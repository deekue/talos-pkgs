# References:
#   U-Boot:
#     - https://u-boot.readthedocs.io/en/latest
#   Allwinner:
#     - https://linux-sunxi.org/
#     - https://github.com/u-boot/u-boot/blob/master/board/sunxi/README.sunxi64
#   Rockchip:
#     - http://opensource.rock-chips.com
#     - https://github.com/u-boot/u-boot/blob/master/doc/board/rockchip/rockchip.rst
#     - https://u-boot.readthedocs.io/en/latest/board/rockchip/rockchip.html
name: u-boot
variant: scratch
shell: /toolchain/bin/bash
dependencies:
  - stage: base
  - stage: openssl
steps:
  # {{ if eq .ARCH "aarch64" }} This in fact is YAML comment, but Go templating instruction is evaluated by bldr restricting build to arm64 only
  - sources:
      - url: https://github.com/ARM-software/arm-trusted-firmware/archive/v2.7.tar.gz
        destination: arm-trusted-firmware.tar.gz
        sha256: 327c65b1bc231608a7a808b068b00c1a22310e9fc86158813cd10a9711d5725e
        sha512: ff9bd87bf74653275ef9abdf2079974c214e13bd1861bdb3dc4240bdf7e972f3a91c8c6ef86e26afcffe51b29b856c8cf6ffb3d4150d7ccd6a4d3b696bb6f55f
      - url: https://ftp.denx.de/pub/u-boot/u-boot-2022.04.tar.bz2
        destination: u-boot.tar.bz2
        sha256: 68e065413926778e276ec3abd28bb32fa82abaa4a6898d570c1f48fbdb08bcd0
        sha512: 113056e542db049eea3b1d1ccbbe52c79539a2f9bb6129d284ec9200dcffec7bd5969821913a9899631575b80991c84ad01bc845b4bba614e42e54466d9f0d64
    env:
      SUN50I_A64_ARM_TRUSTED_FIRMWARE: sun50i_a64_arm-trusted-firmware
      RPI_4_A64_ARM_TRUSTED_FIRMWARE: rpi_4_a64_arm-trusted-firmware
      RK3328_ARM_TRUSTED_FIRMWARE: rk3328_arm-trusted-firmware
      RK3399_ARM_TRUSTED_FIRMWARE: rk3399_arm-trusted-firmware
      LIBRETECH_ALL_H3_CC_H5_U_BOOT: libretech_all_h3_cc_h5_u-boot
      ROCK64_RK3328_U_BOOT: rock64_rk3328_u-boot
      RPI_ARM64_U_BOOT: rpi_4_u-boot
      BANANAPI_M64_U_BOOT: bananapi_m64_u-boot
      PINE64_U_BOOT: pine64_u-boot
      ROCK_PI_4_RK3399_U_BOOT: rock-pi-4-rk3399_u-boot
      ROCK_PI_4C_RK3399_U_BOOT: rock-pi-4c-rk3399_u-boot
      JETSON_NANO_U_BOOT: jetson-nano_u-boot
      NANOPI_R4S_U_BOOT: nanopi-r4s_u-boot
    prepare:
      - |
        mkdir -p /usr/bin \
          && ln -sf /toolchain/bin/env /usr/bin/env \
      # sun50i_a64
      - |
        mkdir ${SUN50I_A64_ARM_TRUSTED_FIRMWARE}
        tar -xzf arm-trusted-firmware.tar.gz --strip-components=1 -C ${SUN50I_A64_ARM_TRUSTED_FIRMWARE}
      # rk3328
      - |
        mkdir ${RK3328_ARM_TRUSTED_FIRMWARE}
        tar -xzf arm-trusted-firmware.tar.gz --strip-components=1 -C ${RK3328_ARM_TRUSTED_FIRMWARE}
      # rk3399
      - |
        mkdir ${RK3399_ARM_TRUSTED_FIRMWARE}
        tar -xzf arm-trusted-firmware.tar.gz --strip-components=1 -C ${RK3399_ARM_TRUSTED_FIRMWARE}
        cd ${RK3399_ARM_TRUSTED_FIRMWARE}
        patch -p0 < /pkg/rockpi4/patches/platform.mk.patch
      # libretech_all_h3_cc_h5
      - |
        mkdir ${LIBRETECH_ALL_H3_CC_H5_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${LIBRETECH_ALL_H3_CC_H5_U_BOOT}
        cd ${LIBRETECH_ALL_H3_CC_H5_U_BOOT}
        make libretech_all_h3_cc_h5_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # rock64-rk3328
      - |
        mkdir ${ROCK64_RK3328_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${ROCK64_RK3328_U_BOOT}
        cd ${ROCK64_RK3328_U_BOOT}
        make rock64-rk3328_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # rpi_4_arm-trusted-firmware
      - |
        mkdir ${RPI_4_A64_ARM_TRUSTED_FIRMWARE}
        tar -xzf arm-trusted-firmware.tar.gz --strip-components=1 -C ${RPI_4_A64_ARM_TRUSTED_FIRMWARE}
      # rpi_4
      - |
        mkdir ${RPI_ARM64_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${RPI_ARM64_U_BOOT}
        cd ${RPI_ARM64_U_BOOT}
        make rpi_4_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # bananapi_m64
      - |
        mkdir ${BANANAPI_M64_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${BANANAPI_M64_U_BOOT}
        cd ${BANANAPI_M64_U_BOOT}
        make bananapi_m64_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # pine64
      - |
        mkdir ${PINE64_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${PINE64_U_BOOT}
        cd ${PINE64_U_BOOT}
        make pine64_plus_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # rock-pi-4-rk3399
      - |
        mkdir ${ROCK_PI_4_RK3399_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${ROCK_PI_4_RK3399_U_BOOT}
        cd ${ROCK_PI_4_RK3399_U_BOOT}
        patch -p1 < /pkg/rockpi4/patches/board-rock-pi-4-enable-spi-flash.patch
        patch -p1 < /pkg/rockpi4/patches/general-add-xtx-spi-nor-chips.patch
        patch -p1 < /pkg/rockpi4/patches/enable-boot-from-spi-flash.patch
        make rock-pi-4-rk3399_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # rock-pi-4c-rk3399
      - |
        mkdir ${ROCK_PI_4C_RK3399_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${ROCK_PI_4C_RK3399_U_BOOT}
        cd ${ROCK_PI_4C_RK3399_U_BOOT}
        patch -p1 < /pkg/rockpi4/patches/board-rock-pi-4-enable-spi-flash.patch
        patch -p1 < /pkg/rockpi4/patches/general-add-xtx-spi-nor-chips.patch
        patch -p1 < /pkg/rockpi4/patches/enable-boot-from-spi-flash.patch
        make rock-pi-4c-rk3399_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # jetson nano
      - |
        mkdir ${JETSON_NANO_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${JETSON_NANO_U_BOOT}
        cd ${JETSON_NANO_U_BOOT}
        patch -p0 < /pkg/jetson_nano/patches/tegra.patch
        make p3450-0000_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
      # nanopi-r4s
      - |
        mkdir ${NANOPI_R4S_U_BOOT}
        tar -xjf u-boot.tar.bz2 --strip-components=1 -C ${NANOPI_R4S_U_BOOT}
        cd ${NANOPI_R4S_U_BOOT}
        make nanopi-r4s-rk3399_defconfig
        sed -i "s/CONFIG_TOOLS_LIBCRYPTO=y/# CONFIG_TOOLS_LIBCRYPTO is not set/" .config
    build:
      # sun50i_a64
      - |
        cd ${SUN50I_A64_ARM_TRUSTED_FIRMWARE}
        make realclean
        make -j $(nproc) PLAT=sun50i_a64 DEBUG=0 bl31
      # rk3328
      - |
        cd ${RK3328_ARM_TRUSTED_FIRMWARE}
        make realclean
        make -j $(nproc) PLAT=rk3328 DEBUG=0 bl31
      # rk3399
      - |
        cd ${RK3399_ARM_TRUSTED_FIRMWARE}
        make realclean
        mkdir -p $(pwd)/build/rk3399/release/
        cp -rf /pkg/rockpi4/m0 $(pwd)/build/rk3399/release/
        make -j $(nproc) PLAT=rk3399 DEBUG=0 bl31
      # libretech_all_h3_cc_h5
      - |
        export BL31=$(pwd)/${SUN50I_A64_ARM_TRUSTED_FIRMWARE}/build/sun50i_a64/release/bl31.bin
        cd ${LIBRETECH_ALL_H3_CC_H5_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"
      # rock64-rk3328
      - |
        export BL31=$(pwd)/${RK3328_ARM_TRUSTED_FIRMWARE}/build/rk3328/release/bl31/bl31.elf
        cd ${ROCK64_RK3328_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"
      # rpi_4_arm-trusted-firmware
      - |
        cd ${RPI_4_A64_ARM_TRUSTED_FIRMWARE}
        # TODO: remove once ATF compiles fine on gcc 12
        patch -p0 < /pkg/arm-trusted-firmware/patches/gcc-12-build-fix.patch
        make realclean
        make -j $(nproc) PLAT=rpi4 DEBUG=0 bl31
      # rpi_4
      - |
        cd ${RPI_ARM64_U_BOOT}
        export BL31=$(pwd)/${RPI_4_A64_ARM_TRUSTED_FIRMWARE}/build/rpi4/release/bl31.bin
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"
      # bananapi_m64
      - |
        export BL31=$(pwd)/${SUN50I_A64_ARM_TRUSTED_FIRMWARE}/build/sun50i_a64/release/bl31.bin
        cd ${BANANAPI_M64_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"
      # pine64
      - |
        export BL31=$(pwd)/${SUN50I_A64_ARM_TRUSTED_FIRMWARE}/build/sun50i_a64/release/bl31.bin
        cd ${PINE64_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"
      # rock-pi-4-rk3399
      - |
        export BL31=$(pwd)/${RK3399_ARM_TRUSTED_FIRMWARE}/build/rk3399/release/bl31/bl31.elf
        cd ${ROCK_PI_4_RK3399_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"

        # create spi image
        # https://github.com/armbian/build/blob/09e416e31cc01ece4533a65f02a470a4c21b90ea/config/sources/families/include/rockchip64_common.inc#L173-L178
        tools/mkimage -n rk3399 -T rkspi -d tpl/u-boot-tpl.bin:spl/u-boot-spl.bin rkspi_tpl_spl.img
        dd if=/dev/zero of=rkspi_loader.img count=8128 status=none
        dd if=rkspi_tpl_spl.img of=rkspi_loader.img conv=notrunc status=none
        dd if=u-boot.itb of=rkspi_loader.img seek=768 conv=notrunc status=none
       # rock-pi-4c-rk3399
      - |
        export BL31=$(pwd)/${RK3399_ARM_TRUSTED_FIRMWARE}/build/rk3399/release/bl31/bl31.elf
        cd ${ROCK_PI_4C_RK3399_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"

        # create spi image
        # https://github.com/armbian/build/blob/09e416e31cc01ece4533a65f02a470a4c21b90ea/config/sources/families/include/rockchip64_common.inc#L173-L178
        tools/mkimage -n rk3399 -T rkspi -d tpl/u-boot-tpl.bin:spl/u-boot-spl.bin rkspi_tpl_spl.img
        dd if=/dev/zero of=rkspi_loader.img count=8128 status=none
        dd if=rkspi_tpl_spl.img of=rkspi_loader.img conv=notrunc status=none
        dd if=u-boot.itb of=rkspi_loader.img seek=768 conv=notrunc status=none
      # jetson nano
      - |
        cd ${JETSON_NANO_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"
      # nanopi-r4s
      - |
        export BL31=$(pwd)/${RK3399_ARM_TRUSTED_FIRMWARE}/build/rk3399/release/bl31/bl31.elf
        cd ${NANOPI_R4S_U_BOOT}
        make -j $(nproc) HOSTLDLIBS_mkimage="-lssl -lcrypto"
    install:
      # libretech_all_h3_cc_h5
      - |
        mkdir -p /rootfs/libretech_all_h3_cc_h5
        cp -v ${LIBRETECH_ALL_H3_CC_H5_U_BOOT}/u-boot-sunxi-with-spl.bin /rootfs/libretech_all_h3_cc_h5
      # rock64-rk3328
      - |
        mkdir -p /rootfs/rock64
        cp -v ${ROCK64_RK3328_U_BOOT}/u-boot-rockchip.bin /rootfs/rock64
      # rpi_4
      - |
        mkdir -p /rootfs/rpi_4
        cp -v ${RPI_ARM64_U_BOOT}/u-boot.bin /rootfs/rpi_4
        cp $(pwd)/${RPI_4_A64_ARM_TRUSTED_FIRMWARE}/build/rpi4/release/bl31.bin /rootfs/rpi_4
      # bananapi_m64
      - |
        mkdir -p /rootfs/bananapi_m64
        cp -v ${BANANAPI_M64_U_BOOT}/u-boot-sunxi-with-spl.bin /rootfs/bananapi_m64
      # pine64
      - |
        mkdir -p /rootfs/pine64
        cp -v ${PINE64_U_BOOT}/u-boot-sunxi-with-spl.bin /rootfs/pine64
      # rock-pi-4-rk3399
      - |
        mkdir -p /rootfs/rockpi_4
        cp -v ${ROCK_PI_4_RK3399_U_BOOT}/u-boot-rockchip.bin /rootfs/rockpi_4

        # cp spi image
        cp -v ${ROCK_PI_4_RK3399_U_BOOT}/rkspi_loader.img /rootfs/rockpi_4
      # rock-pi-4c-rk3399
      - |
        mkdir -p /rootfs/rockpi_4c
        cp -v ${ROCK_PI_4C_RK3399_U_BOOT}/u-boot-rockchip.bin /rootfs/rockpi_4c

        # cp spi image
        cp -v ${ROCK_PI_4C_RK3399_U_BOOT}/rkspi_loader.img /rootfs/rockpi_4c
      # jetson nano
      - |
        mkdir -p /rootfs/jetson_nano
        cp -v ${JETSON_NANO_U_BOOT}/u-boot.bin /rootfs/jetson_nano
      # nanopi-r4s
      - |
        mkdir -p /rootfs/nanopi_r4s
        cp -v ${NANOPI_R4S_U_BOOT}/u-boot-rockchip.bin /rootfs/nanopi_r4s
  # {{ else }}
  - install:
      - |
        mkdir -p /rootfs
# {{ end }}
finalize:
  - from: /rootfs
    to: /
